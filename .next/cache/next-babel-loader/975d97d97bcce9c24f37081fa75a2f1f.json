{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\n\nconst defaultEpic = (action$, _state$) => action$.pipe(ofType('TEST'), switchMap(() => from([1]).pipe(map(_response => {\n  return {\n    type: ''\n  };\n}))));\n\nexport default [defaultEpic];","map":{"version":3,"sources":["/Users/shiacruz/Desktop/project/next-ts-ssr/epics/app.ts"],"names":["ofType","map","switchMap","from","defaultEpic","action$","_state$","pipe","_response","type"],"mappings":"AAAA,SAA6CA,MAA7C,QAA2D,kBAA3D;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;AAEA,SAASC,IAAT,QAAqB,MAArB;;AAEA,MAAMC,WAAW,GAAG,CAClBC,OADkB,EAElBC,OAFkB,KAIlBD,OAAO,CAACE,IAAR,CACEP,MAAM,CAAC,MAAD,CADR,EAEEE,SAAS,CAAC,MACRC,IAAI,CAAC,CAAC,CAAD,CAAD,CAAJ,CAAUI,IAAV,CACEN,GAAG,CAACO,SAAS,IAAI;AACf,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFE,CADL,CADO,CAFX,CAJF;;AAeA,eAAe,CAACL,WAAD,CAAf","sourcesContent":["import { ActionsObservable, StateObservable, ofType } from 'redux-observable'\nimport { map, switchMap } from 'rxjs/operators'\n\nimport { from } from 'rxjs'\n\nconst defaultEpic = (\n  action$: ActionsObservable<any>,\n  _state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType('TEST'),\n    switchMap(() =>\n      from([1]).pipe(\n        map(_response => {\n          return { type: '' }\n        })\n      )\n    )\n  )\n\nexport default [defaultEpic]\n"]},"metadata":{},"sourceType":"module"}