{"ast":null,"code":"var __jsx = React.createElement;\nimport \"../styles/index.sass\";\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport { appWithTranslation } from \"../server/i18n\";\nimport createStore from \"../store\";\nimport withRedux from 'next-redux-wrapper';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n    if (ctx.req) {\n      const i18n = ctx.req.i18n;\n      const lang = ctx.query.lng || i18n.language;\n      await i18n.changeLanguage(lang);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps));\n  }\n\n}\n\nexport default withRedux(createStore)(appWithTranslation(MyApp));","map":{"version":3,"sources":["/Users/shiacruz/Desktop/project/next-ts-ssr/pages/_app.tsx"],"names":["App","Provider","React","appWithTranslation","createStore","withRedux","MyApp","getInitialProps","Component","ctx","pageProps","req","i18n","lang","query","lng","language","changeLanguage","render","store","props"],"mappings":";AAAA;AAEA,OAAOA,GAAP,MAAgC,UAAhC;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,kBAAT;AACA,OAAOC,WAAP;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;;AAOA,MAAMC,KAAN,SAAoBN,GAApB,CAAoC;AAClC,eAAaO,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAA6D;AAC3D,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;;AAIA,QAAIA,GAAG,CAACE,GAAR,EAAa;AACX,YAAMC,IAAI,GAAIH,GAAG,CAACE,GAAL,CAAiBC,IAA9B;AACA,YAAMC,IAAI,GAAIJ,GAAG,CAACK,KAAJ,CAAUC,GAAX,IAA6BH,IAAI,CAACI,QAA/C;AAEA,YAAMJ,IAAI,CAACK,cAAL,CAAoBJ,IAApB,CAAN;AACD;;AAED,WAAO;AACLH,MAAAA;AADK,KAAP;AAGD;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBS,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACE,MAAC,SAAD,EAAeT,SAAf,CADF,CADF;AAKD;;AAxBiC;;AA2BpC,eAAeL,SAAS,CAACD,WAAD,CAAT,CAAuBD,kBAAkB,CAACG,KAAD,CAAzC,CAAf","sourcesContent":["import '../styles/index.sass'\n\nimport App, { AppContext } from 'next/app'\n\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport { Store } from 'redux'\nimport { WithTranslation } from 'next-i18next'\nimport { appWithTranslation } from '@App/server/i18n'\nimport createStore from '../store'\nimport i18next from 'i18next'\nimport withRedux from 'next-redux-wrapper'\n\ninterface MyAppProps extends WithTranslation {\n  store: Store\n  query?: { [key: string]: string }\n}\n\nclass MyApp extends App<MyAppProps> {\n  static async getInitialProps({ Component, ctx }: AppContext) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {}\n\n    if (ctx.req) {\n      const i18n = (ctx.req as any).i18n as i18next.i18n\n      const lang = (ctx.query.lng as string) || i18n.language\n\n      await i18n.changeLanguage(lang)\n    }\n\n    return {\n      pageProps\n    }\n  }\n  render() {\n    const { Component, pageProps, store } = this.props\n    return (\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    )\n  }\n}\n\nexport default withRedux(createStore)(appWithTranslation(MyApp))\n"]},"metadata":{},"sourceType":"module"}