{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootEpic from \"../epics\";\nimport rootReducer, { initState } from \"../reducer\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (process.env.NODE_ENV !== 'production') {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nexport default function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var epicMiddleware = createEpicMiddleware();\n  var store = createStore(rootReducer, initialState, bindMiddleware([epicMiddleware]));\n  epicMiddleware.run(rootEpic);\n  if (process.browser) window.store = store;\n  return store;\n}","map":{"version":3,"sources":["/Users/shiacruz/Desktop/project/next-ts-ssr/store/index.tsx"],"names":["createStore","applyMiddleware","createEpicMiddleware","rootEpic","rootReducer","initState","bindMiddleware","middleware","process","env","NODE_ENV","require","composeWithDevTools","initializeStore","initialState","epicMiddleware","store","run","browser","window"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP,IAAsBC,SAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAqB;AAC1C,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAEzC,WAAOA,mBAAmB,CAACX,eAAe,MAAf,4BAAmBM,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAON,eAAe,MAAf,4BAAmBM,UAAnB,EAAP;AACD,CAND;;AAQA,eAAe,SAASM,eAAT,GAAmD;AAAA,MAA1BC,YAA0B,uEAAXT,SAAW;AAChE,MAAMU,cAAc,GAAGb,oBAAoB,EAA3C;AAEA,MAAMc,KAAK,GAAGhB,WAAW,CACvBI,WADuB,EAEvBU,YAFuB,EAGvBR,cAAc,CAAC,CAACS,cAAD,CAAD,CAHS,CAAzB;AAMAA,EAAAA,cAAc,CAACE,GAAf,CAAmBd,QAAnB;AACA,MAAIK,OAAO,CAACU,OAAZ,EAAqBC,MAAM,CAACH,KAAP,GAAeA,KAAf;AACrB,SAAOA,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\nimport rootEpic from '@App/epics'\nimport rootReducer, { initState } from '@Reducer/index'\n\nconst bindMiddleware = (middleware: any) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension')\n    return composeWithDevTools(applyMiddleware(...middleware))\n  }\n  return applyMiddleware(...middleware)\n}\n\nexport default function initializeStore(initialState = initState) {\n  const epicMiddleware = createEpicMiddleware()\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    bindMiddleware([epicMiddleware])\n  )\n\n  epicMiddleware.run(rootEpic)\n  if (process.browser) window.store = store\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}