{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Layout from \"../components/Common/Layout\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withTranslation } from \"../server/i18n\";\n\nvar styles = function styles(theme) {\n  return createStyles({\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(4, 0, 1)\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8)\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    cardMedia: {\n      paddingTop: '56.25%' // 16:9\n\n    },\n    cardContent: {\n      flexGrow: 1\n    }\n  });\n};\n\nvar cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nvar Album =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Album, _React$Component);\n\n  function Album() {\n    _classCallCheck(this, Album);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Album).apply(this, arguments));\n  }\n\n  _createClass(Album, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return __jsx(Layout, null, __jsx(\"main\", null, __jsx(\"div\", {\n        className: classes.heroContent\n      }, __jsx(Container, {\n        maxWidth: \"sm\"\n      }, __jsx(Typography, {\n        component: \"h1\",\n        variant: \"h2\",\n        align: \"center\",\n        color: \"textPrimary\",\n        gutterBottom: true\n      }, this.props.t('page_title')))), __jsx(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\"\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 4\n      }, cards.map(function (card) {\n        return __jsx(Grid, {\n          item: true,\n          key: card,\n          xs: 12,\n          sm: 6,\n          md: 4\n        }, __jsx(Card, {\n          className: classes.card\n        }, __jsx(CardMedia, {\n          className: classes.cardMedia,\n          image: \"https://source.unsplash.com/random\",\n          title: \"Image title\"\n        }), __jsx(CardContent, {\n          className: classes.cardContent\n        }, __jsx(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\"\n        }, \"Heading\"), __jsx(Typography, null, \"This is a media card. You can use this section to describe the content.\")), __jsx(CardActions, null, __jsx(Button, {\n          size: \"small\",\n          color: \"primary\"\n        }, \"View\"), __jsx(Button, {\n          size: \"small\",\n          color: \"primary\"\n        }, \"Share\"))));\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", {\n                  namespacesRequired: ['common']\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Album;\n}(React.Component);\n/*\ninterface AlumComponent<Prop> extends React.FunctionComponent<Prop> {\n  getInitialProps?: () => Promise<{\n    namespacesRequired: Array<string>\n  }>\n}\nconst Album = withTranslation('common')(function(props: Prop) {\n  const classes = useStyles()\n\n  return ()\n}) as AlumComponent<Prop>\n\nAlbum.getInitialProps = async () => ({\n  namespacesRequired: ['common']\n})\n*/\n\n\nexport default withTranslation('common')(withStyles(styles)(Album));","map":{"version":3,"sources":["/Users/shiacruz/Desktop/project/next-ts-ssr/pages/accounts.tsx"],"names":["createStyles","withStyles","Button","Card","CardActions","CardContent","CardMedia","Container","Grid","Layout","React","Typography","withTranslation","styles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","cards","Album","classes","props","t","map","namespacesRequired","Component"],"mappings":"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","sourcesContent":["import {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles\n} from '@material-ui/core/styles'\n\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Layout from '@Components/Common/Layout'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { WithTranslation } from 'next-i18next'\nimport { withTranslation } from '@App/server/i18n'\n\ninterface Props extends WithStyles<typeof styles>, WithTranslation {}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(4, 0, 1)\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8)\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    cardMedia: {\n      paddingTop: '56.25%' // 16:9\n    },\n    cardContent: {\n      flexGrow: 1\n    }\n  })\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nclass Album extends React.Component<Props> {\n  static async getInitialProps() {\n    return {\n      namespacesRequired: ['common']\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <Layout>\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroContent}>\n            <Container maxWidth='sm'>\n              <Typography\n                component='h1'\n                variant='h2'\n                align='center'\n                color='textPrimary'\n                gutterBottom\n              >\n                {this.props.t('page_title')}\n              </Typography>\n            </Container>\n          </div>\n          <Container className={classes.cardGrid} maxWidth='md'>\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {cards.map(card => (\n                <Grid item key={card} xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image='https://source.unsplash.com/random'\n                      title='Image title'\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant='h5' component='h2'>\n                        Heading\n                      </Typography>\n                      <Typography>\n                        This is a media card. You can use this section to\n                        describe the content.\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button size='small' color='primary'>\n                        View\n                      </Button>\n                      <Button size='small' color='primary'>\n                        Share\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </main>\n      </Layout>\n    )\n  }\n}\n\n/*\ninterface AlumComponent<Prop> extends React.FunctionComponent<Prop> {\n  getInitialProps?: () => Promise<{\n    namespacesRequired: Array<string>\n  }>\n}\nconst Album = withTranslation('common')(function(props: Prop) {\n  const classes = useStyles()\n\n  return ()\n}) as AlumComponent<Prop>\n\nAlbum.getInitialProps = async () => ({\n  namespacesRequired: ['common']\n})\n*/\n\nexport default withTranslation('common')(withStyles(styles)(Album))\n"]},"metadata":{},"sourceType":"module"}